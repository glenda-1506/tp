@startuml

actor User
participant Duke
participant ExpenseManager
participant TrackerData

User -> Duke : "delete-expense e/[expenseIndex]"
activate Duke

    Duke -> Duke : deleteExpenseRequest(delete-expense e/[expenseIndex], ExpenseManager, TrackerData)
    activate Duke

alt Valid index
    Duke -> ExpenseManager : deleteExpense(TrackerData, expenseIndex)
    activate ExpenseManager
    ExpenseManager -> TrackerData : getExpenses()
    activate TrackerData
    TrackerData --> ExpenseManager : List<Expense>
    deactivate TrackerData

    ExpenseManager -> ExpenseManager : {assert valid index}
    ExpenseManager -> ExpenseManager : validateIndex(expenseIndex)
    activate ExpenseManager
    ExpenseManager --> ExpenseManager : result
    deactivate ExpenseManager

    ExpenseManager -> TrackerData : setExpenses(updatedExpenses)
    deactivate ExpenseManager
    Duke --> User : "Expense deleted successfully"
else Invalid index
    Duke --> User : "Invalid input! Please provide a valid expense index."
end
deactivate Duke
deactivate Duke

@enduml
